
//        let storeProductVC = SKStoreProductViewController()
//        storeProductVC.delegate = self
//        storeProductVC.loadProduct(withParameters: [SKStoreProductParameterITunesItemIdentifier : NSNumber(value: 1296651713)])
//        self.present(storeProductVC, animated: true, completion: nil)

//        let message = "Check out these HD wallpapers:"
//        if let link = NSURL(string: "https://itunes.apple.com/us/app/wallpaper-pro-hd-backgrounds/id1298573221?ls=1&mt=8")
//        {
//            let objectsToShare = [message,link] as [Any]
//            let activityVC = UIActivityViewController(activityItems: objectsToShare, applicationActivities: nil)
//            activityVC.excludedActivityTypes = [UIActivityType.airDrop, UIActivityType.addToReadingList]
//            self.present(activityVC, animated: true, completion: nil)
//        }


categoryButton.alpha = 1.0
let storeProductVC = SKStoreProductViewController()
storeProductVC.delegate = self
storeProductVC.loadProduct(withParameters: [SKStoreProductParameterITunesItemIdentifier : NSNumber(value: 1306304549)])
self.present(storeProductVC, animated: true, completion: nil)


//  SHOWINTERSTIAIAL???
//        if AdManager.Instance.counter < 2 {
//            AdManager.Instance.counter+=1
//        } else if AdManager.Instance.counter == 2 {
//            AdManager.Instance.counter = 0
//            if AdManager.Instance.interstitial.isReady {
//                AdManager.Instance.showAdmobInterstitial(fromVC: self)
//            } else if ALInterstitialAd.isReadyForDisplay() {
//                AdManager.Instance.showApplovinAd()
//            } else {
//                // No Ad
//            }
//        }

let userIsProMember = UserDefaults.standard.bool(forKey: "promember")
if userIsProMember == true {
} else {
if PFUser.current() != nil {
/// && PFUser.current()?.object(forKey: "runCount") as! Int > 1
//self.perform(#selector(showPro), with: nil, afterDelay: 0.75)
}
}

//registerForPreviewing(with: self, sourceView: view)


// Dynamic Categories
//        let query = PFQuery(className: "Categories")
//        query.findObjectsInBackground { (objects, error) in
//            if let categories = objects {
//                CategoryManager.Instance.categories.removeAll()
//                for category in categories {
//                    CategoryManager.Instance.categories.append(category["categoryName"] as! String)
//                }
//            }
//        }
